<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picPrint.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        GY/3XwbNW7hPbNM9AAAAAElFTkSuQmCC
</value>
  </data>
</root>